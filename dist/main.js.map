{"version":3,"file":"main.js","mappings":"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","sources":["webpack://instagram/./src/app/controller/fileController.ts","webpack://instagram/./src/app/controller/filtersController.ts","webpack://instagram/./src/app/controller/tagsController.ts","webpack://instagram/./src/app/controller/userController.ts","webpack://instagram/./src/app/getRequestData.ts","webpack://instagram/./src/app/model.ts","webpack://instagram/./src/app/router/filtersRouter.ts","webpack://instagram/./src/app/router/imageRouter.ts","webpack://instagram/./src/app/router/tagsRouter.ts","webpack://instagram/./src/app/router/userRouter.ts","webpack://instagram/external commonjs \"bcryptjs\"","webpack://instagram/external commonjs \"dotenv\"","webpack://instagram/external commonjs \"formidable\"","webpack://instagram/external commonjs \"http\"","webpack://instagram/external commonjs \"jsonwebtoken\"","webpack://instagram/external commonjs \"sharp\"","webpack://instagram/external node-commonjs \"fs\"","webpack://instagram/webpack/bootstrap","webpack://instagram/webpack/runtime/compat get default export","webpack://instagram/webpack/runtime/define property getters","webpack://instagram/webpack/runtime/hasOwnProperty shorthand","webpack://instagram/webpack/runtime/make namespace object","webpack://instagram/./src/index.ts"],"sourcesContent":["import * as formidable from 'formidable';\nimport * as fs from 'fs';\nimport { nextPhotoId, photoList } from '../model';\n\nclass FileControllerClass\n{\n\ncreateAlbum(name: string): void\n{\n    fs.mkdirSync(`./albums/${name}`)\n}\n\nuploadPhoto(name: string, album: string)\n{\n    if(!fs.existsSync(`./albums/${album}`))\n        this.createAlbum(album)\n    fs.renameSync(`./temp/${name}`, `./albums/${album}/${name}`)\n    photoList.push({\n        id: nextPhotoId.id,\n        album: album,\n        originalName: name,\n        url: `./albums/${album}/${name}`,\n        lastChange: Date.now().toLocaleString(),\n        history: [],\n        tagList: []\n    })\n    return photoList[photoList.length - 1]\n}\n\nfindPhotoById(id: number)\n{\n    return photoList.find(el => el.id == id)\n}\n\n}\nconst FileController = new FileControllerClass()\nexport default FileController\n\n// export interface PhotoData {\n//     id: String,\n//     album: String,\n//     originalName: String,\n//     url: String,\n//     lastChange: String,\n//     history: singleChange[]\n// }","import sharp from \"sharp\";\r\nimport FileController from \"./fileController\";\r\n\r\nexport async function getMetadata(photoId:number): Promise<sharp.Metadata | string>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                let meta = await sharp(photo.url)\r\n                .metadata()\r\n                resolve(meta)\r\n            }\r\n            else{\r\n                resolve(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err.message)\r\n        }\r\n    })\r\n}\r\n//toDo edutuj historie zdjecia zamiast tworzyc nowe dane po filtrze\r\nexport async function rotate(photoId:number, angle:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .rotate(angle)\r\n                .toFile(`temp/${photo.originalName}_rotate.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_rotate.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function resize(photoId:number, width:number, height:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .resize(width, height)\r\n                .toFile(`temp/${photo.originalName}_resize.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_resize.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//toDo funkcja uploadPhoto i tak zrobi z tego jpg, napraw potem\r\nexport async function reformat(photoId:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .toFile(`temp/${photo.originalName}.png`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \".png\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function crop(photoId:number, region: sharp.Region): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .extract(region)\r\n                .toFile(`temp/${photo.originalName}_crop.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_crop.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function grayScale(photoId:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .grayscale()\r\n                .toFile(`temp/${photo.originalName}_grayScale.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_grayScale.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function flip(photoId:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .flip()\r\n                .toFile(`temp/${photo.originalName}_flip.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_flip.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\nexport async function flop(photoId:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .flop()\r\n                .toFile(`temp/${photo.originalName}_flop.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_flop.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function negate(photoId:number): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .grayscale()\r\n                .toFile(`temp/${photo.originalName}_negate.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_negate.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport async function tint(photoId:number, color: sharp.Color): Promise<number>\r\n{\r\n    return new Promise(async (resolve, reject) => {\r\n        try \r\n        {\r\n            const photo = FileController.findPhotoById(photoId)\r\n            if(photo !== undefined)\r\n            {\r\n                await sharp(photo.url)\r\n                .tint(color)\r\n                .toFile(`temp/${photo.originalName}_tint.jpg`)\r\n                const newPhoto = FileController.uploadPhoto(photo.originalName + \"_tint.jpg\", photo.album)\r\n                resolve(newPhoto.id)\r\n            }\r\n            else \r\n            {\r\n                reject(\"not found\")\r\n            }\r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n","import { tagsList, nextTagId, photoList } from \"../model\";\r\n\r\nexport function addTag(name:string, popularity?: number):boolean\r\n{\r\n    if(tagsList.findIndex(tag => tag.name == name) == -1)\r\n    {\r\n        tagsList.push({\r\n            name: name,\r\n            popularity: popularity ?? 0,\r\n            id: nextTagId.id\r\n        })\r\n      return true\r\n    }\r\n   return false;\r\n}\r\n\r\nexport function bindTag(photoId:number, tagId:number[]):boolean\r\n{\r\n  let success = true;\r\n  const photo = photoList.find(photo => photo.id == photoId)\r\n\r\n  \r\n    tagId.forEach(id => {\r\n      const tag = tagsList.find(tag => tag.id == id)\r\n      if(tag !== undefined && !photo.tagList.includes(tag.name))\r\n        photo.tagList.push(tag.name)\r\n      else\r\n      success = false\r\n    })\r\n  \r\n\r\n  return success;\r\n}","import { nextUserId, tokenBinding, user, userList } from \"../model\";\r\nimport * as jwt from \"jsonwebtoken\"\r\nimport bcrypt from \"bcryptjs\"\r\nimport { IncomingMessage } from \"http\";\r\nimport { getPostData } from \"../getRequestData\";\r\nrequire(\"dotenv\").config()\r\n\r\nclass UserController {\r\n    async reqisterUser(name: string, lastName: string, email: string, password: string) {\r\n        const encPassword = await bcrypt.hash(password, 10)\r\n        const newUser:user = {name, lastName, email, password:encPassword, confirmed:false, id:nextUserId.id}\r\n        userList.push(newUser)\r\n        const token = await this.createToken(newUser.email, \"5m\")\r\n        return token\r\n    }\r\n    \r\n    async confirmUser(token:string)\r\n    {\r\n        try\r\n        {\r\n            const turnOut = await this.checkToken(token) as unknown as {email:string, iat:number, exp:number}\r\n            const toConfirm = userList.find(el => el.email == turnOut.email)\r\n            console.log(toConfirm)\r\n            toConfirm.confirmed = true\r\n            return true\r\n        }\r\n        catch{\r\n            return false;\r\n        }\r\n        \r\n        \r\n    }\r\n    async createToken(email:string, time:string) {\r\n\r\n        let token = await jwt.sign(\r\n           {email: email},\r\n            process.env.SECRET_KEY, // powinno być w .env\r\n            {\r\n                expiresIn: time // \"1m\", \"1d\", \"24h\"\r\n            }\r\n        );\r\n        console.log({ token: token });\r\n        return token\r\n    }\r\n    async checkToken(token:string)\r\n    {\r\n        const decode = await jwt.verify(token,\r\n            process.env.SECRET_KEY)\r\n        return decode;\r\n\r\n    }\r\n    async login(email:string, password:string):Promise<boolean | string>\r\n    {\r\n        const toCheck = userList.find(el => el.email == email)\r\n        let passCheck = await bcrypt.compare(password, toCheck.password)\r\n        console.log(passCheck, toCheck.confirmed)\r\n        if(passCheck && toCheck.confirmed)\r\n        {\r\n            const userId = toCheck.id\r\n            const token = await this.createToken(email, \"1h\")\r\n            tokenBinding.push({userId, token})\r\n            return token\r\n            \r\n        }\r\n        return false\r\n    }\r\n    async checkLoginToken(token:string)\r\n    {\r\n        const decode = await jwt.verify(token,\r\n            process.env.SECRET_KEY)\r\n        return decode;\r\n    }\r\n    async verifyLogin(req:IncomingMessage)\r\n    {\r\n        return new Promise(async (resolve, reject) => {\r\n            console.log(req.headers[\"content-type\"])\r\n            if(req.headers[\"content-type\"] == \"application/json\")\r\n            {\r\n                const body = await getPostData(req)\r\n                const data = JSON.parse(body)\r\n                try{\r\n                    const test = jwt.decode(data.token)\r\n                    resolve(test)\r\n                }\r\n                catch\r\n                {\r\n                    reject(\"expired\")\r\n                }\r\n            }\r\n            resolve(\"ok\")\r\n        })\r\n    }\r\n}\r\nvar userController = new UserController()\r\nexport default userController;","import { IncomingMessage } from \"http\";\r\n\r\nexport async function getPostData(req: IncomingMessage):Promise<string>\r\n{\r\n    return new Promise((resolve, reject) =>{\r\n        try {\r\n            let body = \"\"\r\n\r\n            req.on(\"data\", part => {\r\n                body += part.toString()\r\n            })\r\n    \r\n            req.on(\"end\", () => {\r\n                resolve(body)\r\n            })\r\n    \r\n        }\r\n        catch (err)\r\n        {\r\n            reject(err)\r\n        }\r\n        \r\n    })\r\n}","interface singleChange \n{\n    status: string,\n    lastModifiedDate: string\n}\n\nexport interface PhotoData {\n    id: number,\n    album: string,\n    originalName: string,\n    url: string,\n    lastChange: string,\n    history: singleChange[],\n    tagList: string[]\n}\n\nexport interface TagData {\n    id: number,\n    name: string,\n    popularity:number\n}\n\nexport interface UpdatePhotoTagsData {\n    photoId: number,\n    tagName: string | string[],\n\n}\nexport interface user{\n    id: number,\n    name: string,\n    lastName: string,\n    email: string,\n    confirmed: boolean,\n    password: string\n}\nexport let nextUserId = {\n    _id:6,\n    get id():number\n    {\n        this._id += 1\n        return this._id\n\n    }\n}\nexport const userList:user[] = []\nexport const tokenBinding:{userId: number, token:string}[] = []\nexport const tagsList:TagData[] = [\n    {\n        \"id\": 0,\n        \"name\": \"#love\",\n        \"popularity\": 0\n   },\n   {\n        \"id\": 1,\n        \"name\": \"#instagood\",\n        \"popularity\": 0\n   },\n   {\n        \"id\": 2,\n        \"name\": \"#fashion\",\n        \"popularity\": 0\n   },\n   {\n        \"id\": 3,\n        \"name\": \"#photooftheday\",\n        \"popularity\": 0\n   },\n   {\n        \"id\": 4,\n        \"name\": \"#beautiful\",\n        \"popularity\": 0\n   },\n   {\n        \"id\": 5,\n        \"name\": \"#art\",\n        \"popularity\": 0\n   }\n]\nexport let nextTagId = {\n    _id:6,\n    get id():number\n    {\n        this._id += 1\n        return this._id\n\n    },\n}\n\nexport const photoList:PhotoData[] = []\nexport let nextPhotoId = \n{\n    _id: 0,\n    get id():number\n    {\n        this._id += 1\n        return this._id\n    }\n\n}\n","import { IncomingMessage, ServerResponse } from \"http\";\r\nimport {\r\n  getMetadata,\r\n  rotate,\r\n  resize,\r\n  reformat,\r\n  crop,\r\n  grayScale,\r\n  flop,\r\n  flip,\r\n  negate,\r\n  tint,\r\n} from \"../controller/filtersController\";\r\n\r\nexport default async function filtersRouter(\r\n  req: IncomingMessage,\r\n  res: ServerResponse\r\n) {\r\n  if (req.method === \"GET\") {\r\n    if (req.url.match(/metadata\\/[0-9]*$/)) {\r\n      const temp = req.url.split(\"/\");\r\n      const id = temp[temp.length - 1] as unknown as number;\r\n      const meta = await getMetadata(id);\r\n      res.statusCode = 200;\r\n      res.statusMessage = \"ok\";\r\n      res.write(JSON.stringify(meta));\r\n      res.end();\r\n    } else if (req.url.match(/getfile\\/[0-9]\\//)) {\r\n      const temp = req.url.split(\"/\");\r\n      let newID;\r\n      switch (temp[temp.length - 1]) {\r\n        case \"rotate\":\r\n          newID = await rotate(temp[temp.length - 2] as unknown as number, 90);\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"resize\":\r\n          newID = await resize(\r\n            temp[temp.length - 2] as unknown as number,\r\n            200,\r\n            200\r\n          );\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"reformat\":\r\n          newID = await reformat(temp[temp.length - 2] as unknown as number);\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"crop\":\r\n          newID = await crop(temp[temp.length - 2] as unknown as number, {\r\n            width: 100,\r\n            height: 100,\r\n            left: 0,\r\n            top: 0,\r\n          });\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"grayScale\":\r\n          newID = await grayScale(temp[temp.length - 2] as unknown as number);\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"flip\":\r\n          newID = await flip(temp[temp.length - 2] as unknown as number);\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"flop\":\r\n          newID = await flop(temp[temp.length - 2] as unknown as number);\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"negate\":\r\n          newID = await negate(temp[temp.length - 2] as unknown as number);\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n        case \"tint\":\r\n          newID = await tint(temp[temp.length - 2] as unknown as number, \"red\");\r\n          res.statusCode = 200;\r\n          res.statusMessage = \"ok\";\r\n          res.end(newID + \"\");\r\n          break;\r\n      }\r\n    }\r\n  } else if (req.method === \"PATCH\") {\r\n  }\r\n}\r\n","import * as formidable from \"formidable\";\nimport { IncomingMessage, ServerResponse } from \"http\";\nimport FileController from \"../controller/fileController\";\nimport { getPostData } from \"../getRequestData\";\nimport { photoList } from \"../model\";\n\nexport default async function imageRouter(\n  req: IncomingMessage,\n  res: ServerResponse\n) {\n  switch (req.method) {\n    case \"GET\":\n      const [path, params] = req.url.split(/\\?/);\n      if (path == \"/api/photos\") {\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", \"application/json\");\n\n        res.end(JSON.stringify(photoList))\n        //pobierz wszystkie\n        res.end();\n      } else if (req.url.match(/api\\/photos\\/[0-9]*/)) {\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", \"image/jpg\");\n        //pobierz jedno zdjęcie\n        res.end();\n      }\n      break;\n    case \"POST\":\n      if (req.url == \"/api/photos\") {\n        const form = formidable({ multiples: true, uploadDir: \"./temp\" });\n        form.parse(req, (err, fields, files) => {\n          if (err) {\n            res.statusCode = err.httpCode || 404;\n            res.statusMessage = String(err);\n            res.end();\n            return;\n          }\n\n          const photo = FileController.uploadPhoto((files.file as unknown as formidable.File).newFilename, (fields as unknown as{album: string}).album)\n          res.statusCode = 200;\n          res.setHeader(\"content-type\", \"application/json\");\n          res.end(JSON.stringify({ ok: \"ok\", ...photo }));\n        });\n      }\n      break;\n    case \"DELETE\":\n      if (req.url.match(/api\\/photos\\/[0-9a-zA-Z]*/)) {\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", \"application/json\");\n\n        //usun zdjecie i zwroc jego json\n        res.end();\n      }\n      break;\n    case \"PATCH\":\n      if (req.url.match(/api\\/photos\\/[0-9]*/)) {\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", \"application/json\");\n        const body = await getPostData(req)\n        //edytuj jedno zdjecie\n        res.end(JSON.stringify(body));\n      }\n      break;\n  }\n}\n","import { IncomingMessage, ServerResponse } from \"http\";\r\nimport { url } from \"inspector\";\r\nimport { getPostData } from \"../getRequestData\";\r\nimport { photoList, tagsList, UpdatePhotoTagsData } from \"../model\";\r\nimport { addTag, bindTag } from \"../controller/tagsController\";\r\n\r\nexport default async function tagRouter(\r\n  req: IncomingMessage,\r\n  res: ServerResponse<IncomingMessage>\r\n) {\r\n  switch (req.method) {\r\n    case \"GET\":\r\n      const [path, args] = req.url.split(\"?\");\r\n      console.log(path)\r\n      if (path.match(/raw/)) {\r\n        res.statusCode = 200;\r\n        res.statusMessage = \"ok\";\r\n        res.setHeader(\"content-type\", \"application/json\");\r\n\r\n        const stringList = tagsList.map((tag) => {\r\n          return tag.name;\r\n        });\r\n        res.write(JSON.stringify(stringList));\r\n        res.end();\r\n      } else if (path.match(/tags$/)) {\r\n        res.statusCode = 200;\r\n        res.statusMessage = \"ok\";\r\n        res.setHeader(\"content-type\", \"application/json\");\r\n        res.write(JSON.stringify(tagsList));\r\n        res.end();\r\n      } else if (path.match(/tags\\/[0-9]*/)) {\r\n        \r\n        const id = path.split(/\\/tags\\//)[1] as unknown as number;\r\n        const photo = photoList.find(photo => photo.id == id)\r\n        if(photo === undefined)\r\n        {\r\n          res.statusMessage = \"I'm not ok\"\r\n          res.statusCode = 403\r\n          res.end()\r\n          return;\r\n        }\r\n\r\n\r\n        \r\n        const tag = photo.tagList.map(\r\n          name => {\r\n           const tag =  tagsList.find((tag) => tag.name == name);\r\n           if(tag !== undefined)\r\n           return tag\r\n          }\r\n        )\r\n        \r\n        \r\n\r\n        res.statusCode = 200;\r\n        res.statusMessage = \"ok\";\r\n        res.setHeader(\"content-type\", \"application/json\");\r\n        res.write(JSON.stringify(tag));\r\n        res.end();\r\n      }\r\n      break;\r\n\r\n    case \"POST\":\r\n      if (req.url.match(/^\\/api\\/tags$/)) {\r\n        getPostData(req).then((body) => {\r\n          console.log(body)\r\n          const obj = JSON.parse(body) as {name: string, popularity?: number}\r\n          obj.name = \"#\" + obj.name.replace(/\\#/g, \"\")\r\n\r\n          console.log(obj)\r\n\r\n          const ok = addTag(obj.name, obj.popularity)\r\n          if(ok){\r\n            res.statusCode = 200\r\n            res.statusMessage = \"ok\"\r\n            res.end()\r\n          }\r\n          else{\r\n            res.statusCode = 400\r\n            res.statusMessage = \"this tag probably already exists\"\r\n            res.end()\r\n          }\r\n        });\r\n      }\r\n      break;\r\n\r\n    case \"PATCH\":\r\n        if(req.url.match(/api\\/photos\\/tags$/))\r\n        {\r\n            const body:string = await getPostData(req) as string;\r\n            const obj = JSON.parse(body) as UpdatePhotoTagsData\r\n            obj.tagName = \"#\" + (obj.tagName as string).replace(/\\#/g, \"\")\r\n            const tagId = tagsList.find(tag => tag.name == obj.tagName).id \r\n            if(bindTag(obj.photoId, [tagId]))\r\n            {\r\n              res.statusMessage = \"ok\"\r\n              res.statusCode = 200\r\n            }\r\n            else\r\n            {\r\n              res.statusMessage = \"I'm not ok\"\r\n              res.statusCode = 403\r\n            }\r\n            res.end()  \r\n        }\r\n        else if(req.url.match(/api\\/photos\\/tags\\/mass$/))\r\n        {\r\n          const body:string = await getPostData(req) as string;\r\n          const obj = JSON.parse(body) as UpdatePhotoTagsData\r\n          \r\n          const tagId = (obj.tagName as string[]).map(name => {\r\n            const tag = tagsList.find(el => name == el.name)\r\n            if(tag !== undefined)\r\n              return tag.id;\r\n          });\r\n\r\n          if(bindTag(obj.photoId, tagId))\r\n            {\r\n              res.statusMessage = \"ok\"\r\n              res.statusCode = 200\r\n            }\r\n            else\r\n            {\r\n              res.statusMessage = \"I'm not ok\"\r\n              res.statusCode = 403\r\n            }\r\n            res.end()  \r\n          \r\n          \r\n        break;\r\n          }\r\n  }\r\n  return;\r\n}\r\n","import { IncomingMessage, ServerResponse } from \"http\";\r\nimport userController from \"../controller/userController\";\r\nimport { getPostData } from \"../getRequestData\";\r\n\r\nexport default async function userRouter(req:IncomingMessage, res:ServerResponse<IncomingMessage>)\r\n{\r\n    switch (req.method){\r\n        case \"POST\":\r\n            if(req.url.match(/\\/register/))\r\n            {\r\n                const body = await getPostData(req);\r\n                const user = JSON.parse(body) as unknown as {name:string, lastName:string, email:string, password:string}\r\n                console.log(user)\r\n                if(user.name != undefined && user.lastName != undefined && user.email != undefined && user.password != undefined)\r\n                {\r\n                    const token = await userController.reqisterUser(user.name, user.lastName, user.email, user.password)\r\n                    res.statusCode = 201\r\n                    res.statusMessage = \"ok\"\r\n                    res.end(token)\r\n                }\r\n                res.statusCode = 400\r\n                res.statusMessage = \"im not ok\"\r\n                res.end()\r\n                \r\n                \r\n            }\r\n            if(req.url.match(/\\/login/))\r\n            {\r\n                const body = await getPostData(req);\r\n                const data = JSON.parse(body) as unknown as {email:string, password:string}\r\n                const result = await userController.login(data.email, data.password)\r\n                if(result)\r\n                {\r\n                    res.statusCode = 200\r\n                    res.statusMessage = \"pomyslnie zalogowano\"\r\n                    res.end(result)\r\n                }\r\n                else{\r\n                    res.statusCode = 400\r\n                    res.statusMessage = \"err\"\r\n                    res.end(\"upewnij się że hasło jest poprawne, a adres email potwierdzony\")\r\n                }\r\n                    \r\n            }\r\n            break;\r\n        case \"GET\":\r\n            if(req.url.match(/\\/confirm\\/.+$/))\r\n            {\r\n                const phases = req.url.split(\"/\")\r\n                const token = phases[phases.length - 1]\r\n                let status = await userController.confirmUser(token)\r\n                if(status)\r\n                {\r\n                    res.statusCode = 200\r\n                    res.statusMessage = \"successfully confirmed\"\r\n                    res.end()\r\n                }\r\n                res.statusCode = 401\r\n                res.statusMessage = \"bad token\"\r\n                res.end()\r\n            }\r\n    }\r\n}","module.exports = require(\"bcryptjs\");","module.exports = require(\"dotenv\");","module.exports = require(\"formidable\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"sharp\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createServer } from \"http\";\nimport userController from \"./app/controller/userController\";\nimport filtersRouter from \"./app/router/filtersRouter\";\nimport imageRouter from \"./app/router/imageRouter\";\nimport tagRouter from \"./app/router/tagsRouter\";\nimport userRouter from \"./app/router/userRouter\";\nrequire(\"dotenv\").config()\n\nconst server = createServer((req, res) => {\n\n  userController.verifyLogin(req)\n  if(req.url.match(/tags/))\n    tagRouter(req, res);\n  else if(req.url.match(/\\/api\\/photos/))\n    imageRouter(req, res);\n  else if(req.url.match(/api\\/filters/))\n    filtersRouter(req, res)\n  else if(req.url.match(/api\\/user/))\n    userRouter(req, res)\n\n});\n\nserver.listen(process.env.APP_PORT, () => {\n  console.log(\"Start on \" + process.env.APP_PORT);\n});\n"],"names":[],"sourceRoot":""}